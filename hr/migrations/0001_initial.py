# Generated by Django 5.1.7 on 2025-07-14 10:33

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Assets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Branches',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=5, validators=[django.core.validators.RegexValidator('^[A-Z]+$', 'Only uppercase letters are allowed.')])),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='CompanyName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('pending', 'Pending')], default='active', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Qualification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qualification_name', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ZoneofOperations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department_name', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=20)),
                ('company_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departments', to='hr.companyname')),
            ],
        ),
        migrations.CreateModel(
            name='Designation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation_name', models.CharField(blank=True, max_length=100, null=True)),
                ('rank', models.IntegerField(default=1, help_text='Priority for sorting (lower numbers appear first)')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=20)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='designations', to='hr.category')),
            ],
        ),
        migrations.CreateModel(
            name='SubDepartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_department_name', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=20)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sub_departments', to='hr.department')),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emp_id_branch', models.CharField(max_length=7, unique=True, validators=[django.core.validators.RegexValidator(message='Employee ID must be exactly 7 digits.', regex='^\\d{7}$')], verbose_name='Employee ID')),
                ('emp_first_name', models.CharField(max_length=100)),
                ('emp_last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('emp_photo', models.ImageField(blank=True, null=True, upload_to='employee_photo/')),
                ('emp_dob', models.DateField()),
                ('emp_gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], max_length=10)),
                ('emp_address', models.TextField()),
                ('emp_mobile', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message='Enter a valid phone number.', regex='^\\+?\\d{10,15}$')])),
                ('emp_second_mobile', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='Enter a valid phone number.', regex='^\\+?\\d{10,15}$')])),
                ('emp_email', models.EmailField(max_length=254, validators=[django.core.validators.EmailValidator(message='Enter a valid email address.')])),
                ('emp_salary', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Employee Salary')),
                ('emp_blood_group', models.CharField(choices=[('ab+ve', 'AB+'), ('ab-ve', 'AB-'), ('a+ve', 'A+'), ('a-ve', 'A-'), ('b+ve', 'B+'), ('b-ve', 'B-'), ('o+ve', 'O+'), ('o-ve', 'O-')], max_length=5)),
                ('emp_joining_date', models.DateField()),
                ('emp_resigning_date', models.DateField(blank=True, null=True)),
                ('emp_resigning_reason', models.TextField(blank=True, help_text="Reason for employee's resignation", null=True)),
                ('emp_documents', models.FileField(blank=True, help_text='Upload employee documents', null=True, upload_to='employee_documents/')),
                ('emp_status', models.CharField(choices=[('active', 'Active'), ('in-active', 'In Active')], default='active', max_length=100)),
                ('emp_rating', models.CharField(blank=True, choices=[('poor', 'Poor'), ('bad', 'Bad'), ('average', 'Average'), ('good', 'Good'), ('excellent', 'Excellent')], default='average', max_length=20, null=True)),
                ('emp_last_rating_date', models.DateField(blank=True, help_text='Date of the last rating', null=True)),
                ('emp_experiences', models.JSONField(blank=True, default=list, null=True)),
                ('emp_work_start_time', models.TimeField()),
                ('emp_work_end_time', models.TimeField()),
                ('emp_aadhar_number', models.CharField(max_length=12, null=True)),
                ('emp_remarks', models.TextField(blank=True, null=True)),
                ('emp_assets', models.ManyToManyField(blank=True, to='hr.assets')),
                ('emp_branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hr.branches')),
                ('emp_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hr.category')),
                ('emp_company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hr.companyname')),
                ('emp_department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hr.department')),
                ('emp_designation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hr.designation')),
                ('emp_qualification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hr.qualification')),
                ('emp_extra_skills', models.ManyToManyField(to='hr.skill')),
                ('emp_sub_department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hr.subdepartment')),
            ],
        ),
        migrations.AddField(
            model_name='category',
            name='sub_department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='hr.subdepartment'),
        ),
        migrations.AddField(
            model_name='branches',
            name='zone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hr.zoneofoperations'),
        ),
        migrations.CreateModel(
            name='BranchHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(help_text='Start date of branch assignment')),
                ('end_date', models.DateField(blank=True, help_text='End date of branch assignment (null if current)', null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', help_text='Status of this branch assignment', max_length=20)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hr.branches')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='branch_history', to='hr.employee')),
            ],
            options={
                'verbose_name': 'Branch History',
                'verbose_name_plural': 'Branch Histories',
                'indexes': [models.Index(fields=['employee', 'start_date'], name='hr_branchhi_employe_e4e64c_idx'), models.Index(fields=['employee', 'end_date'], name='hr_branchhi_employe_e0e7c4_idx')],
                'constraints': [models.CheckConstraint(condition=models.Q(('end_date__gte', models.F('start_date')), ('end_date__isnull', True), _connector='OR'), name='end_date_gte_start_date')],
            },
        ),
        migrations.CreateModel(
            name='SalaryIncrementHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salary', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='New Salary')),
                ('start_date', models.DateField(help_text='Start date of salary increment')),
                ('end_date', models.DateField(blank=True, help_text='End date of salary increment (null if current)', null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', help_text='Status of this salary increment', max_length=20)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='salary_increment_history', to='hr.employee')),
            ],
            options={
                'verbose_name': 'Salary Increment History',
                'verbose_name_plural': 'Salary Increment Histories',
                'indexes': [models.Index(fields=['employee', 'start_date'], name='hr_salaryin_employe_7fe715_idx'), models.Index(fields=['employee', 'end_date'], name='hr_salaryin_employe_d896c9_idx')],
                'constraints': [models.CheckConstraint(condition=models.Q(('end_date__gte', models.F('start_date')), ('end_date__isnull', True), _connector='OR'), name='salary_end_date_gte_start_date'), models.CheckConstraint(condition=models.Q(('salary__gt', 0)), name='salary_positive')],
            },
        ),
        migrations.CreateModel(
            name='PromotionHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(help_text='Start date of promotion')),
                ('end_date', models.DateField(blank=True, help_text='End date of promotion (null if current)', null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', help_text='Status of this promotion', max_length=20)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hr.category')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hr.department')),
                ('designation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hr.designation')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='promotion_history', to='hr.employee')),
                ('sub_department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hr.subdepartment')),
            ],
            options={
                'verbose_name': 'Promotion History',
                'verbose_name_plural': 'Promotion Histories',
                'indexes': [models.Index(fields=['employee', 'start_date'], name='hr_promotio_employe_d5ba21_idx'), models.Index(fields=['employee', 'end_date'], name='hr_promotio_employe_6e3a4f_idx')],
                'constraints': [models.CheckConstraint(condition=models.Q(('end_date__gte', models.F('start_date')), ('end_date__isnull', True), _connector='OR'), name='promotion_end_date_gte_start_date'), models.UniqueConstraint(condition=models.Q(('end_date__isnull', True)), fields=('employee',), name='unique_active_promotion')],
            },
        ),
    ]
